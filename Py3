from transformers import MarianMTModel, MarianTokenizer
import fitz  # PyMuPDF
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import PyPDF2

# Load translation model and tokenizer
model_name = "Helsinki-NLP/opus-mt-en-ur"
tokenizer = MarianTokenizer.from_pretrained(model_name)
model = MarianMTModel.from_pretrained(model_name)

def translate_text(text):
    translated = model.generate(**tokenizer.prepare_seq2seq_batch(text, return_tensors="pt"))
    translation = tokenizer.decode(translated[0], skip_special_tokens=True)
    return translation

def extract_text_from_pdf(pdf_path):
    doc = fitz.open(pdf_path)
    full_text = ""
    for page_num in range(len(doc)):
        page = doc.load_page(page_num)
        full_text += page.get_text()
    return full_text

def create_translated_pdf(original_pdf_path, translated_text, output_pdf_path):
    c = canvas.Canvas(output_pdf_path, pagesize=letter)
    c.drawString(72, 750, translated_text)
    c.save()

def main():
    original_pdf_path = "path_to_your_pdf.pdf"
    translated_pdf_path = "translated_pdf.pdf"
    
    text = extract_text_from_pdf(original_pdf_path)
    translated_text = translate_text(text)
    
    create_translated_pdf(original_pdf_path, translated_text, translated_pdf_path)
    print(f"Translated PDF saved as {translated_pdf_path}")

if __name__ == "__main__":
    main()
